{"version":3,"sources":["webpack:///./src/components/tech-list.js","webpack:///./src/components/links/text-link.js","webpack:///./src/components/_shared/styled-headings.js","webpack:///./src/components/about.js","webpack:///./src/components/card-grid.js","webpack:///./src/components/contact.js","webpack:///./src/components/skewed-section.js","webpack:///./src/components/featured-projects.js","webpack:///./src/components/links/button-link.js","webpack:///./src/components/_shared/animation.js","webpack:///./src/components/scroll-indicator.js","webpack:///./src/components/hero.js","webpack:///./src/components/facts.js","webpack:///./src/pages/index.js","webpack:///./src/components/_shared/styled-content-link.js","webpack:///./src/components/_shared/styled-image-container.js"],"names":["StyledTechContainer","styled","section","StyledTag","span","TechList","techs","map","tech","key","icon","StyledTextLink","Link","flexCenter","TextLink","label","link","Fragment","to","StyledH1","h1","StyledH2","h2","StyledH3","h3","StyledAboutContainer","article","mq","gt","sm","StyledTextSection","About","data","frontmatter","title","about_image","html","image","childImageSharp","fluid","id","objectFit","dangerouslySetInnerHTML","__html","StyledFeatureGridContainer","xs","StyledFeatureCard","a","StyledCardLabel","StyledFeatureDescription","div","p","CardGrid","cards","description","featureCards","index","prefix","href","StyledContactSection","StyledSection","StyledContainer","StyledFormContainer","StyledForm","StyledSeparator","StyledContacts","Contact","location","email","twitter","StyledSkewedSection","SkewedSection","props","console","log","angle","className","children","defaultProps","StyledFeaturedProject","StyledProjectInfoContainer","StyledDescription","contentBox","StyledLinkContainer","flexEnd","StyledArchiveContainer","FeaturedProjects","featuredProjects","featured","project","coverImage","cover_image","fields","slug","demoLink","demo_link","repoLink","repo_link","iosLink","ios_link","androidLink","android_link","demoLinkLabel","repoLinkLabel","aria-label","rel","hasHover","target","StyledButtonLink","ButtonLink","scroll","keyframes","StyledMouse","StyledScroller","StyledScrollText","ScrollIndicator","StyledHeroSection","StyledIntroduction","StyledAuthor","StyledTagline","Hero","introduction","author","tagline","ctaLink","ctaLabel","StyledLogoSection","StyledFactNumber","Facts","query","Index","heroData","site","siteMetadata","hero","cta_label","cta_link","menuLinks","indexMenuLinks","nodes","about","contact","StyledContentLink","StyledImageContainer","StyledStaticImageContainer"],"mappings":"gmBAKA,IAAMA,EAAsBC,IAAOC,QAAV,KAKnBC,EAAYF,IAAOG,KAAV,KAiCAC,IAjBE,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClB,OACE,kBAACN,EAAD,KACGM,EAAMC,KAAI,SAACC,GAAD,OACT,kBAACL,EAAD,CAAWM,IAAKD,GACd,kBAAC,IAAD,CAAME,KAAK,gBACVF,S,koBC1BJ,IAAMG,EAAiBV,YAAOW,OAAPX,CAAH,IACvBY,KAsCWC,IAbE,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACzB,OACE,kBAAC,IAAMC,SAAP,KACGF,GAASC,GACR,kBAACL,EAAD,CAAgBO,GAAIF,GAAc,KAC/BD,EACD,kBAAC,IAAD,CAAML,KAAK,oB,ksCCpCd,IAAMS,EAAWlB,IAAOmB,GAAV,KAsBRC,EAAWpB,IAAOqB,GAAV,KAgBRC,EAAWtB,IAAOuB,GAAV,M,6hBC/BrB,IAAMC,EAAuBxB,IAAOyB,QAAV,IAMtBC,IAAGC,GAAGC,IAIJC,EAAoB7B,IAAOC,QAAV,KAiCR6B,EA7BD,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EAItBA,EAFFC,YAAeC,EAFS,EAETA,MAAO5B,EAFE,EAEFA,MAAO6B,EAFL,EAEKA,YAC7BC,EACEJ,EADFI,KAGIC,EAAQF,EAAcA,EAAYG,gBAAgBC,MAAQ,KAEhE,OACE,kBAAC,IAAD,CAAeC,GAAG,SAChB,kBAAC,IAAD,iBACA,kBAACf,EAAD,KACGY,GACC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKE,MAAOF,EAAOI,UAAU,aAGjC,6BACE,kBAAC,IAAD,KAAWP,GACX,kBAACJ,EAAD,CAAmBY,wBAAyB,CAAEC,OAAQP,KACtD,kBAAC,IAAD,CAAU9B,MAAOA,Q,2uDCnCDL,IAAOC,QAAV,KAAvB,IAGM0C,EAA6B3C,IAAOC,QAAV,IAO5ByB,IAAGC,GAAGiB,GAGNlB,IAAGC,GAAGC,IAKJiB,EAAoB7C,IAAO8C,EAAV,KA2CjBC,EAAkB/C,IAAOqB,GAAV,KAYf2B,GANgBhD,IAAOiD,IAAV,KAMcjD,IAAOkD,EAAV,MA8BfC,EA1BE,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,YAAapB,EAAuB,EAAvBA,MAChCqB,GADuD,EAAhBf,GACxBa,EAAM9C,KAAI,WAAgCiD,GAAW,IAAxC9C,EAAuC,EAAvCA,KAAM+C,EAAiC,EAAjCA,OAAQ1C,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,KACrD,OACE,kBAAC8B,EAAD,CAAmBrC,IAAK+C,EAAOE,KAAM1C,GACnC,kBAAC,IAAD,CAAMN,KAAMA,EAAM+C,OAAQA,IAC1B,kBAACT,EAAD,KAAkBjC,QAKxB,OACE,kBAAC,IAAD,CAAeyB,GAAG,UACfN,GAAS,kBAAC,IAAD,KAAWA,GACrB,kBAACe,EAAD,CAA0BP,wBAAyB,CAAEC,OAAQW,KAC7D,kBAACV,EAAD,KAA6BW,K,2nCC5FnC,IAAMI,EAAuB1D,YAAO2D,IAAP3D,CAAH,KAGpB4D,EAAkB5D,IAAOC,QAAV,KASf4D,EAAsB7D,IAAOC,QAAV,KAMnB6D,EAAa9D,IAAOiD,IAAV,KAKVpB,EAAoB7B,IAAOC,QAAV,KAMjB8D,EAAkB/D,IAAOiD,IAAV,KAKfe,EAAiBhE,IAAOiD,IAAV,IAOhBvB,IAAGC,GAAGiB,GAGNlB,IAAGC,GAAGC,IAoDKqC,EA/CC,SAAC,GAAc,IAAZlC,EAAW,EAAXA,KAAW,EAIxBA,EAFFC,YAAekC,EAFW,EAEXA,SAAUC,EAFC,EAEDA,MAAOC,EAFN,EAEMA,QAChCjC,EACEJ,EADFI,KAGF,OACE,kBAAC,IAAMnB,SAAP,KAEE,kBAAC0C,EAAD,CAAsBnB,GAAG,WACvB,kBAAC,IAAD,wBACA,kBAAC,EAAD,CAAmBE,wBAAyB,CAAEC,OAAQP,KACtD,kBAAC4B,EAAD,MACA,kBAACC,EAAD,KACGE,GACC,kBAACN,EAAD,KACE,kBAAC,IAAD,CAAMnD,KAAK,aACX,kBAACoD,EAAD,KACE,kBAACC,EAAD,iBACA,8BAAOI,KAIZC,GACC,kBAACP,EAAD,KACE,kBAAC,IAAD,CAAMnD,KAAK,gBACX,kBAACoD,EAAD,KACE,kBAACC,EAAD,eACA,8BAAOK,KAIZC,GACC,kBAACR,EAAD,KACE,kBAAC,IAAD,CAAMnD,KAAK,YACX,kBAACoD,EAAD,KACE,kBAACC,EAAD,gBACA,8BAAOM,S,sqBCzFvB,IACMC,EAAsBrE,IAAOC,QAAV,IADN,QAkCbqE,EAAgB,SAACC,GAGrB,OAFAC,QAAQC,IAAI,QAASF,EAAMG,OAGzB,kBAACL,EAAD,KACE,yBAAKM,UAAU,WAAWJ,EAAMK,YAStCN,EAAcO,aAAe,CAC3BH,MAAO,IAGMJ,Q,sqCCzCf,IAAMQ,GAAwB9E,IAAOyB,QAAV,KAMvBC,IAAGC,GAAGC,IAUJmD,GAA6B/E,IAAOC,QAAV,MAK1B+E,GAAoBhF,IAAOC,QAAV,KACnBgF,KAYEC,GAAsBlF,IAAOC,QAAV,KACrBkF,KAkBEC,GAAyBpF,IAAOiD,IAAV,IACxBrC,KAiFWyE,GA5EU,SAAC,GAAkB,IACpCC,EADmC,EAAfC,SACQjF,KAAI,SAACkF,EAASjC,GAC9C,IAAMkC,EAAaD,EAAQxD,YAAY0D,YAAcF,EAAQxD,YAAY0D,YAAYrD,gBAAgBC,MAAQ,KAEvGL,EAAQuD,EAAQxD,YAAYC,MAC5BlB,EAAO,YAAcyE,EAAQG,OAAOC,KACpCC,EAAWL,EAAQxD,YAAY8D,UAC/BC,EAAWP,EAAQxD,YAAYgE,UAC/BC,EAAUT,EAAQxD,YAAYkE,SAC9BC,EAAcX,EAAQxD,YAAYoE,aAClCC,EAAa,oBAAuBpE,EAAvB,QACbqE,EAAa,oBAAuBrE,EAAvB,QACboB,EAAcmC,EAAQxD,YAAYqB,YAExC,OACE,kBAACyB,GAAD,CAAuBtE,IAAKyB,EAAQsB,GAClC,uBACEgD,aAAYV,EAAWQ,EAAgBN,EAAWO,EAAH,oBAAuCrE,EACtFwB,KAAM1C,IAAa8E,IAAsBE,GAAsB,MAC/DS,IAAI,YAEHf,GACC,kBAAC,IAAD,CAAsBgB,UAAQ,GAC5B,kBAAC,IAAD,CAAKnE,MAAOmD,MAIlB,kBAACV,GAAD,KACE,kBAAC,IAAD,CAAmBtB,KAAM1C,IAAc8E,IAAsBE,GAAsB,MAAKS,IAAI,YAC1F,kBAAC,IAAD,KAAWvE,IAEb,kBAAC+C,GAAD,KAAmB,2BAAI3B,IACvB,kBAAC,IAAD,CAAUhD,MAAOmF,EAAQxD,YAAY3B,QACrC,kBAAC6E,GAAD,KACGa,GACC,uBAAGtC,KAAMsC,EAAUW,OAAO,SAASF,IAAI,WAAWvE,MAAM,kBAAkBsE,aAAYD,GACpF,kBAAC,IAAD,CAAM7F,KAAK,SAAS+C,OAAO,SAG9BqC,GACC,uBAAGpC,KAAMoC,EAAUa,OAAO,SAASF,IAAI,WAAWvE,MAAM,YAAYsE,aAAYF,GAC9E,kBAAC,IAAD,CAAM5F,KAAK,UAAU+C,OAAO,SAG/ByC,GACC,uBAAGxC,KAAMwC,EAASS,OAAO,SAASF,IAAI,WAAWvE,MAAM,YAAYsE,aAAYF,GAC7E,kBAAC,IAAD,CAAM5F,KAAK,QAAQ+C,OAAO,SAG7B2C,GACC,uBAAG1C,KAAM0C,EAAaO,OAAO,SAASF,IAAI,WAAWvE,MAAM,YAAYsE,aAAYF,GACjF,kBAAC,IAAD,CAAM5F,KAAK,UAAU+C,OAAO,eAS1C,OACE,kBAAC,EAAD,CAAqBkB,MAAS,IAC5B,kBAAC,IAAD,CAAUnC,GAAK,YAAf,qBACA,kBAAC,IAAD,KAAU,uBAAGkB,KAAK,aAAR,qBAAsC,kBAAC,IAAD,CAAMhD,KAAK,kBAC1D6E,EACD,kBAACF,GAAD,KACE,kBAAC,IAAD,CAAUtE,MAAM,oBAAoBC,KAAK,iB,w5BCvI1C,IAAM4F,GAAmB3G,IAAO8C,EAAV,KACzBlC,KAyDWgG,GAbI,SAAC,GAAqB,IAAnB9F,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAC3B,OACE,kBAAC,IAAMC,SAAP,KACGF,GAASC,GACR,kBAAC4F,GAAD,CAAkBlD,KAAM1C,GAAc,IAAKyF,IAAI,YAC5C1F,EACD,kBAAC,IAAD,CAAML,KAAK,mB,wPCtDd,IAAMoG,GAASC,aAAH,M,o6BCInB,IAAMlD,GAAkB5D,IAAOiD,IAAV,KAMjBrC,IAKAc,IAAGC,GAAGiB,IAIJmE,GAAc/G,IAAOiD,IAAV,MAOX+D,GAAiBhH,IAAOiD,IAAV,KASA4D,IAKdI,GAAmBjH,IAAOG,KAAV,MAkBP+G,GAbS,WACtB,OACE,kBAAC,GAAD,KACE,kBAACD,GAAD,oBACA,kBAACF,GAAD,KACE,kBAACC,GAAD,S,s8BC5CR,IAAMG,GAAoBnH,YAAO2D,IAAP3D,CAAH,KAInB0B,IAAGC,GAAGC,IAIJwF,GAAqBpH,IAAOiD,IAAV,MAIlBoE,GAAerH,IAAOmB,GAAV,KAOdO,IAAGC,GAAGiB,IAIJ0E,GAAgBtH,IAAOqB,GAAV,KAQfK,IAAGC,GAAGiB,IAIJoC,GAAoBhF,IAAOiD,IAAV,MAyBRsE,GAnBF,SAAC,GAAc,IAAZxF,EAAW,EAAXA,KACNyF,EAAkEzF,EAAlEyF,aAAcC,EAAoD1F,EAApD0F,OAAQC,EAA4C3F,EAA5C2F,QAASrE,EAAmCtB,EAAnCsB,YAAasE,EAAsB5F,EAAtB4F,QAASC,EAAa7F,EAAb6F,SAE7D,OACE,kBAACT,GAAD,KACE,kBAACC,GAAD,KAAqBI,GACrB,kBAACH,GAAD,KAAeI,GACf,kBAACH,GAAD,KAAgBI,GAChB,kBAAC,GAAD,CAAmBjF,wBAAyB,CAAEC,OAAQW,KACtD,kBAAC,GAAD,CAAYvC,MAAO8G,EAAU7G,KAAM4G,IACnC,kBAAC,GAAD,Q,wyBCtDN,IAAME,GAAoB7H,IAAOC,QAAV,MAOjB6H,GAAmB9H,IAAOC,QAAV,MAqDP8H,GArBD,WACZ,OACE,kBAAC,EAAD,CAAqBrD,MAAO,IAC1B,kBAACmD,GAAD,KACE,kBAACC,GAAD,KACE,0BAAMnD,UAAU,UAAhB,UACA,0BAAMA,UAAU,QAAhB,kBAEF,kBAACmD,GAAD,KACE,0BAAMnD,UAAU,UAAhB,kBACA,0BAAMA,UAAU,QAAhB,aAEF,kBAACmD,GAAD,KACE,0BAAMnD,UAAU,UAAhB,MACA,0BAAMA,UAAU,QAAhB,uB,uCCfGqD,IAFEC,UA5BD,SAAC,GAAc,IAAZlG,EAAW,EAAXA,KACTmG,EAAW,CACfT,OAAQ1F,EAAKoG,KAAKC,aAAaX,OAC/BC,QAAS3F,EAAKsG,KAAKrG,YAAY0F,QAC/BrE,YAAatB,EAAKsG,KAAKlG,KACvBqF,aAAczF,EAAKsG,KAAKrG,YAAYwF,aACpCI,SAAU7F,EAAKsG,KAAKrG,YAAYsG,UAChCX,QAAS5F,EAAKsG,KAAKrG,YAAYuG,UAGjC,OACE,kBAAC,KAAD,CAAQC,UAAWC,MACjB,kBAAC,KAAD,CAAKxG,MAAM,SACX,kBAAC,GAAD,CAAMF,KAAMmG,IACZ,kBAAC,GAAD,CAAkB3C,SAAUxD,EAAKuD,iBAAiBoD,QAClD,kBAAC,EAAD,CAAO3G,KAAMA,EAAK4G,QAClB,kBAAC,GAAD,MACA,kBAAC,EAAD,CAAUvF,MAAOrB,EAAKqB,MAAMpB,YAAYoB,MAAOC,YAAatB,EAAKqB,MAAMjB,KAAMF,MAAM,SAASM,GAAG,aAC/F,kBAAC,EAAD,CAASR,KAAMA,EAAK6G,YAYR,e,qQCzCX,IAAMC,E,UAAoB7I,EAAO8C,EAAV,M,44BCAvB,IAAMgG,EAAuB9I,IAAOiD,IAAV,KAcpB8F,EAA6B/I,IAAOiD,IAAV","file":"component---src-pages-index-js-a7c849770f74bc0c8cf7.js","sourcesContent":["import styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Icon from './icon';\n\nconst StyledTechContainer = styled.section`\n  margin-top: 0.8rem;\n  display: flex;\n  flex-wrap: wrap;\n`;\nconst StyledTag = styled.span`\n  display: flex;\n  align-items: center;\n  white-space: nowrap;\n  font-size: 0.8rem;\n\n  color: var(--body-color);\n  margin: 0 1rem 0.5rem 0;\n\n  & > svg {\n    color: var(--primary-color);\n    height: 0.8rem;\n    margin-right: 0.25rem;\n  }\n`;\n\nconst TechList = ({ techs }) => {\n  return (\n    <StyledTechContainer>\n      {techs.map((tech) => (\n        <StyledTag key={tech}>\n          <Icon icon=\"caret-right\" />\n          {tech}\n        </StyledTag>\n      ))}\n    </StyledTechContainer>\n  );\n};\n\nTechList.propTypes = {\n  techs: PropTypes.array.isRequired,\n};\n\nexport default TechList;\n","import styled from '@emotion/styled';\nimport { Link } from 'gatsby';\nimport React from 'react';\nimport Icon from '../icon';\nimport { flexCenter } from './../_shared/styled-mixins';\n\nexport const StyledTextLink = styled(Link)`\n  ${flexCenter};\n  text-decoration: none;\n  font-size: 0.8rem;\n  font-weight: 500;\n  white-space: nowrap;\n  padding: 0.4rem 0.8rem;\n  color: var(--primary-color);\n\n  &:hover {\n    color: var(--secondary-color);\n    text-decoration: underline;\n  }\n\n  & > svg {\n    height: 0.8rem;\n    fill: currentColor;\n    margin-left: 0.25rem;\n    transition: margin-left var(--transition-fast) ease;\n  }\n\n  &:hover > svg {\n    margin-left: 0.5rem;\n  }\n`;\n\nconst TextLink = ({ label, link }) => {\n  return (\n    <React.Fragment>\n      {label && link && (\n        <StyledTextLink to={link ? link : '#'}>\n          {label}\n          <Icon icon=\"arrow-right\" />\n        </StyledTextLink>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default TextLink;\n","import styled from '@emotion/styled';\n\nexport const StyledH1 = styled.h1`\n  width: 100%;\n  position: relative;\n  font-weight: 800;\n  margin: 20px 0;\n  color; var(--title-color);\n\n  &:first-letter {\n    color: var(--primary-color);\n  }\n\n  &:after {\n    background-color: var(--primary-color);\n    content: '';\n    position: absolute;\n    top: -30px;\n    left: 0;\n    width: 30px;\n    height: 2px;\n  }\n`;\n\nexport const StyledH2 = styled.h2`\n  color: var(--title-color);\n  margin: 20px 0;\n  position: relative;\n\n  &:after {\n    background-color: var(--primary-color);\n    content: '';\n    position: absolute;\n    top: -20px;\n    left: 0;\n    width: 30px;\n    height: 2px;\n  }\n`;\n\nexport const StyledH3 = styled.h3`\n  color: var(--title-color);\n  margin: 10px 0;\n  position: relative;\n\n  &:after {\n    background-color: var(--primary-color);\n    content: '';\n    position: absolute;\n    top: -15px;\n    left: 0;\n    width: 110%;\n    height: 2px;\n  }\n`;","import styled from '@emotion/styled';\nimport Img from 'gatsby-image';\nimport React from 'react';\nimport TechList from './tech-list';\nimport { mq } from './_shared/media';\nimport { StyledH1, StyledH2 } from './_shared/styled-headings';\nimport { StyledStaticImageContainer } from './_shared/styled-image-container';\nimport { StyledSection } from './_shared/styled-section';\n\nconst StyledAboutContainer = styled.article`\n  display: grid;\n  grid-template-columns: repeat(1, 1fr);\n  grid-gap: 2.5rem;\n  padding: 2.5rem 0;\n\n  ${mq.gt.sm} {\n    grid-template-columns: repeat(2, 1fr);\n  }\n`;\nconst StyledTextSection = styled.section`\n  white-space: pre-line;\n`;\n\nconst About = ({ data }) => {\n  const {\n    frontmatter: { title, techs, about_image },\n    html,\n  } = data;\n\n  const image = about_image ? about_image.childImageSharp.fluid : null;\n\n  return (\n    <StyledSection id=\"about\">\n      <StyledH1>About Me</StyledH1>\n      <StyledAboutContainer>\n        {image && (\n          <StyledStaticImageContainer>\n            <Img fluid={image} objectFit=\"contain\" />\n          </StyledStaticImageContainer>\n        )}\n        <div>\n          <StyledH2>{title}</StyledH2>\n          <StyledTextSection dangerouslySetInnerHTML={{ __html: html }} />\n          <TechList techs={techs} />\n        </div>\n      </StyledAboutContainer>\n    </StyledSection>\n  );\n};\n\nAbout.propTypes = {};\n\nexport default About;\n","import styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Icon from './icon';\nimport { mq } from './_shared/media';\nimport { StyledH1 } from './_shared/styled-headings';\nimport { StyledSection } from './_shared/styled-section';\n\nconst StyledTextSection = styled.section`\n  white-space: pre-line;\n`;\nconst StyledFeatureGridContainer = styled.section`\n  display: grid;\n  grid-template-columns: repeat(1, 1fr);\n  grid-gap: 2.5rem;\n  margin-top: 2.5rem;\n  width: 100%;\n\n  ${mq.gt.xs} {\n    grid-template-columns: repeat(2, 1fr);\n  }\n  ${mq.gt.sm} {\n    grid-template-columns: repeat(3, 1fr);\n  }\n`;\n\nconst StyledFeatureCard = styled.a`\n  border: 3px solid var(--primary-color);\n  border-radius: var(--radius);\n\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  min-height: 100px;\n  padding: 1rem;\n  background-color: var(--bg-content-color);\n  color: var(--primary-color) !important;\n  position: relative;\n  border: none;\n\n  & svg {\n    height: 2rem;\n    width: 2rem;\n    font-size: 2rem;\n    transition: all ease var(--transition-slow)\n  }\n\n  &:hover > *{\n    color: var(--secondary-color) !important;\n  }\n\n  &:after {\n    content: '';\n    z-index: -1;\n    border: 3px solid var(--primary-color);\n    position: absolute;\n    bottom: -9px;\n    right: -9px;\n    width: 100%;\n    height: 100%;\n    transition: all ease var(--transition-slow);\n  }\n\n  &:hover:after {\n    border: 3px solid var(--secondary-color);\n    bottom: -15px;\n    right: -15px;\n  }\n`;\nconst StyledCardLabel = styled.h2`\n  font-size: 1.5rem;\n  margin: 1rem 0;\n  color: var(--primary-color);\n }\n`;\nconst StyledDivider = styled.div`\n  width: 15%;\n  height: 2px;\n  background-color: var(--primary-color);\n  margin-bottom: 1rem;\n`;\nconst StyledFeatureDescription = styled.p`\n  font-size: 1rem;\n`;\n\nconst CardGrid = ({ cards, description, title, id = null }) => {\n  const featureCards = cards.map(({ icon, prefix, label, link }, index) => {\n    return (\n      <StyledFeatureCard key={index} href={link}>\n        <Icon icon={icon} prefix={prefix}/>\n        <StyledCardLabel>{label}</StyledCardLabel>\n      </StyledFeatureCard>\n    );\n  });\n\n  return (\n    <StyledSection id='resume'>\n      {title && <StyledH1>{title}</StyledH1>}\n      <StyledFeatureDescription dangerouslySetInnerHTML={{ __html: description }} />\n      <StyledFeatureGridContainer>{featureCards}</StyledFeatureGridContainer>\n    </StyledSection>\n  );\n};\n\nCardGrid.propTypes = {\n  cards: PropTypes.array.isRequired,\n  description: PropTypes.string.isRequired,\n  id: PropTypes.string,\n  title: PropTypes.string,\n};\n\nexport default CardGrid;\n","import styled from '@emotion/styled';\nimport React from 'react';\nimport Icon from './icon';\nimport { mq } from './_shared/media';\nimport { StyledH1 } from './_shared/styled-headings';\nimport { StyledSection } from './_shared/styled-section';\n\nconst StyledContactSection = styled(StyledSection)`\n  margin-bottom: 70px;\n`;\nconst StyledContainer = styled.section`\n  display: flex;\n  align-items: center;\n\n  & > svg {\n    font-size: 2rem;\n    margin-right: 0.75rem;\n  }\n`;\nconst StyledFormContainer = styled.section`\n  & > span {\n    font-size: 0.75rem;\n    font-weight: 500;\n  }\n`;\nconst StyledForm = styled.div`\n  color: var(--primary-color);\n\n  font-weight: normal;\n`;\nconst StyledTextSection = styled.section`\n  white-space: pre-line;\n  width: 100%;\n  max-width: 500px;\n  margin-left: 3px;\n`;\nconst StyledSeparator = styled.div`\n  height: 1px;\n  width: 50%;\n  background-color: var(--body-color);\n`;\nconst StyledContacts = styled.div`\n  display: grid;\n  grid-template-columns: repeat(1, 1fr);\n  grid-gap: 30px;\n  width: 100%;\n  margin-top: 2rem;\n\n  ${mq.gt.xs} {\n    grid-template-columns: repeat(2, 1fr);\n  }\n  ${mq.gt.sm} {\n    grid-template-columns: repeat(3, 1fr);\n  }\n`;\n\nconst Contact = ({ data }) => {\n  const {\n    frontmatter: { location, email, twitter },\n    html,\n  } = data;\n\n  return (\n    <React.Fragment>\n      \n      <StyledContactSection id=\"contact\">\n        <StyledH1>Contact Details</StyledH1>\n        <StyledTextSection dangerouslySetInnerHTML={{ __html: html }} />\n        <StyledSeparator />\n        <StyledContacts>\n          {location && (\n            <StyledContainer>\n              <Icon icon=\"building\" />\n              <StyledFormContainer>\n                <StyledForm>Location</StyledForm>\n                <span>{location}</span>\n              </StyledFormContainer>\n            </StyledContainer>\n          )}\n          {email && (\n            <StyledContainer>\n              <Icon icon=\"paper-plane\" />\n              <StyledFormContainer>\n                <StyledForm>E-Mail</StyledForm>\n                <span>{email}</span>\n              </StyledFormContainer>\n            </StyledContainer>\n          )}\n          {twitter && (\n            <StyledContainer>\n              <Icon icon=\"twitter\" />\n              <StyledFormContainer>\n                <StyledForm>Twitter</StyledForm>\n                <span>{twitter}</span>\n              </StyledFormContainer>\n            </StyledContainer>\n          )}\n        </StyledContacts>\n      </StyledContactSection>\n    </React.Fragment>\n  );\n};\n\nexport default Contact;\n","import styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst skewNumber = 0.09719;\nconst StyledSkewedSection = styled.section`\n  margin: 6rem 0;\n  position: relative;\n  padding: calc(100% * ${skewNumber}) 0;\n\n  & > .content {\n    max-width: 1000px;\n    margin: 0 auto;\n    padding: 1.5em;\n    position: relative;\n    \n    /* uncomment for debuggind purposes */\n    /* border: 2px dashed #fff8; */\n  }\n\n  &:after {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    z-index: -1;\n    transform: skewy(-5deg);\n    transform-origin: 50% 0;\n    outline: 1px solid transparent;\n    backface-visibility: hidden;\n    background-color: var(--bg-content-color);\n  }\n`;\n\n// x = tan(α) * a / 2\n\nconst SkewedSection = (props) => {\n  console.log('angle', props.angle);\n\n  return (\n    <StyledSkewedSection>\n      <div className=\"content\">{props.children}</div>\n    </StyledSkewedSection>\n  );\n};\n\nSkewedSection.propTypes = {\n  angle: PropTypes.number,\n};\n\nSkewedSection.defaultProps = {\n  angle: 10,\n};\n\nexport default SkewedSection;\n","import styled from '@emotion/styled';\nimport Img from 'gatsby-image';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Icon from './icon';\nimport TextLink from './links/text-link';\nimport TechList from './tech-list';\nimport StyledSkewedSection from './skewed-section';\nimport { mq } from './_shared/media';\nimport { StyledContentLink } from './_shared/styled-content-link';\nimport { StyledH1, StyledH2, StyledH3 } from './_shared/styled-headings';\nimport { StyledImageContainer } from './_shared/styled-image-container';\nimport { contentBox, flexCenter, flexEnd } from './_shared/styled-mixins';\nimport { StyledSection } from './_shared/styled-section';\n\nconst StyledFeaturedProject = styled.article`\n  display: grid;\n  grid-template-columns: repeat(1, 1fr);\n  grid-gap: 2.5rem;\n  padding: 2.5rem 0;\n\n  ${mq.gt.sm} {\n    grid-template-columns: repeat(2, 1fr);\n  }\n  &:nth-of-type(even) {\n    direction: rtl;\n  }\n  &:nth-of-type(even) * {\n    direction: ltr;\n  }\n`;\nconst StyledProjectInfoContainer = styled.section`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`;\nconst StyledDescription = styled.section`\n  ${contentBox}\n  max-height: 180px;\n  position: relative;\n  padding: 10px;\n\n  > p {\n    height: 100%;\n    margin: 0;\n    font-size: 0.8rem;\n    overflow: hidden;\n  }\n`;\nconst StyledLinkContainer = styled.section`\n  ${flexEnd};\n  margin: 10px 0;\n\n  & > a {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: var(--body-color);\n\n    &:hover {\n      color: var(--primary-color);\n    }\n  }\n\n  & svg {\n    margin: 0 0.5rem;\n  }\n`;\nconst StyledArchiveContainer = styled.div`\n  ${flexCenter};\n  width: 100%;\n  margin-top: 2.5rem;\n`;\n\nconst FeaturedProjects = ({ featured }) => {\n  const featuredProjects = featured.map((project, index) => {\n    const coverImage = project.frontmatter.cover_image ? project.frontmatter.cover_image.childImageSharp.fluid : null;\n\n    const title = project.frontmatter.title;\n    const link = `/projects` + project.fields.slug;\n    const demoLink = project.frontmatter.demo_link;\n    const repoLink = project.frontmatter.repo_link;\n    const iosLink = project.frontmatter.ios_link;\n    const androidLink = project.frontmatter.android_link;\n    const demoLinkLabel = `featured project ${title} demo`;\n    const repoLinkLabel = `featured project ${title} repo`;\n    const description = project.frontmatter.description;\n\n    return (\n      <StyledFeaturedProject key={title + index}>\n        <a\n          aria-label={demoLink ? demoLinkLabel : repoLink ? repoLinkLabel : `featured project ${title}`}\n          href={link ? link: demoLink ? demoLink : repoLink ? repoLink : '#'}\n          rel=\"noopener\"\n        >\n          {coverImage && (\n            <StyledImageContainer hasHover>\n              <Img fluid={coverImage} />\n            </StyledImageContainer>\n          )}\n        </a>\n        <StyledProjectInfoContainer>\n          <StyledContentLink href={link ? link : demoLink ? demoLink : repoLink ? repoLink : '#'} rel=\"noopener\">\n            <StyledH2>{title}</StyledH2>\n          </StyledContentLink>\n          <StyledDescription><p>{description}</p></StyledDescription>\n          <TechList techs={project.frontmatter.techs} />\n          <StyledLinkContainer>\n            {repoLink && (\n              <a href={repoLink} target=\"_blank\" rel=\"noopener\" title=\"Repository Link\" aria-label={repoLinkLabel}>\n                <Icon icon=\"github\" prefix=\"fab\" />\n              </a>\n            )}\n            {demoLink && (\n              <a href={demoLink} target=\"_blank\" rel=\"noopener\" title=\"Itch Link\" aria-label={demoLinkLabel}>\n                <Icon icon=\"itch-io\" prefix=\"fab\"/>\n              </a>\n            )}\n            {iosLink && (\n              <a href={iosLink} target=\"_blank\" rel=\"noopener\" title=\"Itch Link\" aria-label={demoLinkLabel}>\n                <Icon icon=\"apple\" prefix=\"fab\"/>\n              </a>\n            )}\n            {androidLink && (\n              <a href={androidLink} target=\"_blank\" rel=\"noopener\" title=\"Itch Link\" aria-label={demoLinkLabel}>\n                <Icon icon=\"android\" prefix=\"fab\"/>\n              </a>\n            )}\n          </StyledLinkContainer>\n        </StyledProjectInfoContainer>\n      </StyledFeaturedProject>\n    );\n  });\n\n  return (\n    <StyledSkewedSection angle = {30}>\n      <StyledH1 id = \"projects\">Featured Projects</StyledH1>\n      <StyledH3><a href=\"/projects\">View All Projects <Icon icon=\"arrow-right\"/></a></StyledH3>\n      {featuredProjects}\n      <StyledArchiveContainer>\n        <TextLink label=\"View All Projects\" link=\"/projects\" />\n      </StyledArchiveContainer>\n    </StyledSkewedSection>\n  );\n};\n\nFeaturedProjects.propTypes = {\n  featured: PropTypes.array.isRequired,\n};\n\nexport default FeaturedProjects;\n","import styled from '@emotion/styled';\nimport React from 'react';\nimport Icon from '../icon';\nimport { flexCenter } from './../_shared/styled-mixins';\n\nexport const StyledButtonLink = styled.a`\n  ${flexCenter};\n  text-decoration: none;\n  color: var(--primary-color) !important;\n  background-color: var(--bg-content-color);\n  font-size: 0.9rem;\n  font-weight: 500;\n  white-space: nowrap;\n  position: relative;\n  border: none;\n  padding: 0.4rem 0.8rem;\n\n  &:hover {\n    color: var(--secondary-color) !important;\n  }\n\n  &:after {\n    content: '';\n    z-index: -1;\n    border: 1px solid var(--primary-color);\n    position: absolute;\n    bottom: -3px;\n    right: -3px;\n    width: 100%;\n    height: 100%;\n    transition: all ease var(--transition-fast);\n  }\n\n  &:hover:after {\n    border: 1px solid var(--secondary-color);\n    bottom: -5px;\n    right: -5px;\n  }\n\n  & > svg {\n    fill: var(--bg-content-color);\n    height: 0.8rem;\n    margin-left: 0.25rem;\n  }\n\n  &:hover > svg {\n    fill: var(--primary-color);\n  }\n`;\n\nconst ButtonLink = ({ label, link }) => {\n  return (\n    <React.Fragment>\n      {label && link && (\n        <StyledButtonLink href={link ? link : '#'} rel=\"noopener\">\n          {label}\n          <Icon icon=\"arrow-right\" />\n        </StyledButtonLink>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default ButtonLink;\n","import { keyframes } from '@emotion/core'\n\nexport const scroll = keyframes`\n  0% {\n    opacity: 0;\n  }\n\n  10% {\n    transform: translateY(0);\n    opacity: 1;\n  }\n\n  100% {\n    transform: translateY(10px);\n    opacity: 0;\n  }\n`;","import styled from '@emotion/styled';\nimport React from 'react';\nimport { scroll } from './_shared/animation';\nimport { mq } from './_shared/media';\nimport { flexCenter } from './_shared/styled-mixins';\n\nconst StyledContainer = styled.div`\n  position: absolute;\n  bottom: 20px;\n  left: 0;\n  right: 0;\n  width: 100%;\n  ${flexCenter};\n  flex-direction: column;\n\n  display: none;\n\n  ${mq.gt.xs} {\n    display: flex;\n  }\n`;\nconst StyledMouse = styled.div`\n  width: 20px;\n  height: 30px;\n  padding: 0 6px;\n  border: 2px solid #fff;\n  border-radius: 20px;\n`;\nconst StyledScroller = styled.div`\n  position: relative;\n  left: 50%;\n  top: 6px;\n  margin-left: -1px;\n  width: 2px;\n  height: 6px;\n  background: var(--primary-color);\n  border-radius: 25%;\n  animation-name: ${scroll};\n  animation-duration: 2.2s;\n  animation-timing-function: cubic-bezier(0.15, 0.41, 0.69, 0.94);\n  animation-iteration-count: infinite;\n`;\nconst StyledScrollText = styled.span`\n  font-size: 0.7rem;\n  margin: 20px 0;\n`;\n\nconst ScrollIndicator = () => {\n  return (\n    <StyledContainer>\n      <StyledScrollText>Scroll down</StyledScrollText>\n      <StyledMouse>\n        <StyledScroller />\n      </StyledMouse>\n    </StyledContainer>\n  );\n};\n\nScrollIndicator.propTypes = {};\n\nexport default ScrollIndicator;\n","import styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ButtonLink from './links/button-link';\nimport ScrollIndicator from './scroll-indicator';\nimport { mq } from './_shared/media';\nimport { StyledSection } from './_shared/styled-section';\n\nconst StyledHeroSection = styled(StyledSection)`\n  min-height: calc(100vh - 2 * var(--header-height));\n  position: relative;\n\n  ${mq.gt.sm} {\n    min-height: calc(100vh - var(--header-height));\n  }\n`;\nconst StyledIntroduction = styled.div`\n  color: var(--primary-color);\n  font-weight: normal;\n`;\nconst StyledAuthor = styled.h1`\n  margin-left: -4px !important;\n  font-size: 40px;\n  line-height: 1.1;\n  margin: 0;\n  word-break: break-word;\n\n  ${mq.gt.xs} {\n    font-size: 80px;\n  }\n`;\nconst StyledTagline = styled.h2`\n  margin-left: -4px !important;\n  font-size: 40px;\n  line-height: 1.1;\n  margin: 0;\n  color: var(--primary-color);\n  word-break: break-word;\n\n  ${mq.gt.xs} {\n    font-size: 80px;\n  }\n`;\nconst StyledDescription = styled.div`\n  margin-top: 0.5rem;\n  width: 100%;\n  max-width: 500px;\n`;\n\nconst Hero = ({ data }) => {\n  const { introduction, author, tagline, description, ctaLink, ctaLabel } = data;\n\n  return (\n    <StyledHeroSection>\n      <StyledIntroduction>{introduction}</StyledIntroduction>\n      <StyledAuthor>{author}</StyledAuthor>\n      <StyledTagline>{tagline}</StyledTagline>\n      <StyledDescription dangerouslySetInnerHTML={{ __html: description }} />\n      <ButtonLink label={ctaLabel} link={ctaLink} />\n      <ScrollIndicator />\n    </StyledHeroSection>\n  );\n};\n\nHero.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nexport default Hero;\n","import styled from '@emotion/styled';\nimport React from 'react';\nimport StyledSkewedSection from './skewed-section';\nimport { StyledH1 } from './_shared/styled-headings';\n\nconst StyledLogoSection = styled.section`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n`;\n\nconst StyledFactNumber = styled.section`\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n\n  & > .number {\n    margin-left: 2rem;\n    margin-bottom: 1rem;\n    font-size: 2rem;\n    font-weight: bold;\n  }\n\n  & > .fact {\n    position: relative;\n    text-transform: uppercase;\n    font-size: 0.8rem;\n    padding: 0.5rem 1rem;\n    background-color: var(--bg-color);\n    margin-left: 2rem;\n\n    &:before {\n      content: '';\n      position: absolute;\n      top: 50%;\n      left: -2rem;\n      width: 1rem;\n      height: 2px;\n      background-color: var(--primary-color);\n    }\n  }\n`;\n\nconst Facts = () => {\n  return (\n    <StyledSkewedSection angle={10}>\n      <StyledLogoSection>\n        <StyledFactNumber>\n          <span className=\"number\">39,000</span>\n          <span className=\"fact\">Itch.io Views</span>\n        </StyledFactNumber>\n        <StyledFactNumber>\n          <span className=\"number\">VOX and FORBES</span>\n          <span className=\"fact\">Features</span>\n        </StyledFactNumber>\n        <StyledFactNumber>\n          <span className=\"number\">11</span>\n          <span className=\"fact\">Published Games</span>\n        </StyledFactNumber>\n      </StyledLogoSection>\n    </StyledSkewedSection>\n  );\n};\n\nexport default Facts;\n","import { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport About from '../components/about';\nimport CardGrid from '../components/card-grid';\nimport Contact from '../components/contact';\nimport FeaturedProjects from '../components/featured-projects';\nimport Hero from '../components/hero';\nimport Facts from '../components/facts';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport { indexMenuLinks } from '../components/_config/menu-links';\n\nconst Index = ({ data }) => {\n  const heroData = {\n    author: data.site.siteMetadata.author,\n    tagline: data.hero.frontmatter.tagline,\n    description: data.hero.html,\n    introduction: data.hero.frontmatter.introduction,\n    ctaLabel: data.hero.frontmatter.cta_label,\n    ctaLink: data.hero.frontmatter.cta_link,\n  };\n\n  return (\n    <Layout menuLinks={indexMenuLinks}>\n      <SEO title=\"Home\" />\n      <Hero data={heroData} />\n      <FeaturedProjects featured={data.featuredProjects.nodes} />\n      <About data={data.about} />      \n      <Facts/>\n      <CardGrid cards={data.cards.frontmatter.cards} description={data.cards.html} title=\"Resume\" id=\"features\" />\n      <Contact data={data.contact} />\n\n    </Layout>\n  );\n};\n\nIndex.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nexport default Index;\n\nexport const query = graphql`\n  {\n    site {\n      siteMetadata {\n        author\n      }\n    }\n\n    hero: markdownRemark(fileAbsolutePath: { regex: \"/content/sections/hero/\" }) {\n      frontmatter {\n        introduction\n        tagline\n        cta_label\n        cta_link\n      }\n      html\n    }\n\n    about: markdownRemark(fileAbsolutePath: { regex: \"/content/sections/about/\" }) {\n      frontmatter {\n        title\n        techs\n        about_image {\n          childImageSharp {\n            fluid(maxWidth: 800) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n      html\n    }\n\n    cards: markdownRemark(fileAbsolutePath: { regex: \"/content/sections/cards/\" }) {\n      frontmatter {\n        cards {\n          label\n          icon\n          prefix\n          description\n          link\n        }\n      }\n      html\n    }\n\n    featuredProjects: allMarkdownRemark(\n      limit: 3\n      sort: { order: ASC, fields: frontmatter___order }\n      filter: { fileAbsolutePath: { regex: \"/content/projects/\" }, frontmatter: { featured: { eq: true } } }\n    ) {\n      nodes {\n        frontmatter {\n          date(formatString: \"D MMMM, YYYY\")\n          title\n          order\n          repo_link\n          demo_link\n          ios_link\n          android_link\n          techs\n          description\n          tags\n          cover_image {\n            childImageSharp {\n              fluid(maxWidth: 800) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n        html\n        fields {\n          slug\n        }\n      }\n    }\n\n    blog: allMarkdownRemark(\n      sort: { order: DESC, fields: frontmatter___date }\n      limit: 4\n      filter: { fileAbsolutePath: { regex: \"/content/posts/\" }, frontmatter: { published: { ne: false } } }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            tags\n            date(formatString: \"D MMMM, YYYY\")\n            description\n            cover_image {\n              childImageSharp {\n                fluid(maxWidth: 800) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n          excerpt\n          fields {\n            slug\n          }\n        }\n      }\n    }\n\n    contact: markdownRemark(fileAbsolutePath: { regex: \"/content/sections/contact/\" }) {\n      frontmatter {\n        twitter\n        email\n        location\n      }\n      html\n    }\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const StyledContentLink = styled.a`\n  text-decoration: none;\n\n  &:hover > * {\n    cursor: pointer;\n    color: var(--primary-color);\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const StyledImageContainer = styled.div`\n  min-width: 300px;\n  min-height: 200px;\n  position: relative;\n\n  & .gatsby-image-wrapper * {\n    transition: transform var(--transition-fast) ease-in-out !important;\n  }\n\n  &:hover .gatsby-image-wrapper * {\n    transform: scale(1.1);\n  }\n`;\n\nexport const StyledStaticImageContainer = styled.div`\n  min-width: 300px;\n  min-height: 200px;\n  position: relative;\n\n  .gatsby-image-wrapper {\n    overflow: unset !important;\n  }\n\n  .gatsby-image-wrapper:before {\n    content: '';\n    position: absolute;\n    bottom: -10px;\n    right: -10px;\n    width: 98%;\n    height: 98%;\n    border: 2px solid var(--primary-color);\n    transition: all ease var(--transition-fast);\n  }\n`;\n"],"sourceRoot":""}