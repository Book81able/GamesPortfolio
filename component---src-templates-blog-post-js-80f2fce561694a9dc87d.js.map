{"version":3,"sources":["webpack:///./src/components/tech-list.js","webpack:///./src/components/_shared/styled-headings.js","webpack:///./src/components/tag-list.js","webpack:///./src/templates/blog-post.js"],"names":["StyledTechContainer","styled","section","StyledTag","span","TechList","techs","map","tech","key","icon","StyledH1","h1","StyledH2","h2","StyledH3","h3","StyledTagContainer","StyledTagLink","Link","TagList","tags","tag","to","StyledBlogSection","StyledSection","StyledBlogTitle","StyledSubTitle","p","StyledDate","div","StyledHeader","header","StyledBlogText","StyledIFrameContainer","StyledIFrame","iframe","StyledLinkContainer","a","BlogPost","data","readingTime","markdownRemark","fields","text","post","frontmatter","cover_image","childImageSharp","fluid","title","date","description","v_link","repoLink","repo_link","demoLink","demo_link","iosLink","ios_link","androidLink","android_link","demoLinkLabel","repoLinkLabel","menuLinks","blogMenuLinks","allowFullScreen","src","style","float","href","target","rel","aria-label","prefix","dangerouslySetInnerHTML","__html","html","query"],"mappings":"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","file":"component---src-templates-blog-post-js-80f2fce561694a9dc87d.js","sourcesContent":["import styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Icon from './icon';\n\nconst StyledTechContainer = styled.section`\n  margin-top: 0.8rem;\n  display: flex;\n  flex-wrap: wrap;\n`;\nconst StyledTag = styled.span`\n  display: flex;\n  align-items: center;\n  white-space: nowrap;\n  font-size: 0.8rem;\n\n  color: var(--body-color);\n  margin: 0 1rem 0.5rem 0;\n\n  & > svg {\n    color: var(--primary-color);\n    height: 0.8rem;\n    margin-right: 0.25rem;\n  }\n`;\n\nconst TechList = ({ techs }) => {\n  return (\n    <StyledTechContainer>\n      {techs.map((tech) => (\n        <StyledTag key={tech}>\n          <Icon icon=\"caret-right\" />\n          {tech}\n        </StyledTag>\n      ))}\n    </StyledTechContainer>\n  );\n};\n\nTechList.propTypes = {\n  techs: PropTypes.array.isRequired,\n};\n\nexport default TechList;\n","import styled from '@emotion/styled';\n\nexport const StyledH1 = styled.h1`\n  width: 100%;\n  position: relative;\n  font-weight: 800;\n  margin: 20px 0;\n  color; var(--title-color);\n\n  &:first-letter {\n    color: var(--primary-color);\n  }\n\n  &:after {\n    background-color: var(--primary-color);\n    content: '';\n    position: absolute;\n    top: -30px;\n    left: 0;\n    width: 30px;\n    height: 2px;\n  }\n`;\n\nexport const StyledH2 = styled.h2`\n  color: var(--title-color);\n  margin: 20px 0;\n  position: relative;\n\n  &:after {\n    background-color: var(--primary-color);\n    content: '';\n    position: absolute;\n    top: -20px;\n    left: 0;\n    width: 30px;\n    height: 2px;\n  }\n`;\n\nexport const StyledH3 = styled.h3`\n  color: var(--title-color);\n  margin: 10px 0;\n  position: relative;\n\n  &:after {\n    background-color: var(--primary-color);\n    content: '';\n    position: absolute;\n    top: -15px;\n    left: 0;\n    width: 110%;\n    height: 2px;\n  }\n`;","import styled from '@emotion/styled';\nimport { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst StyledTagContainer = styled.section`\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0.5rem 0;\n`;\nconst StyledTag = styled.span`\n  pointer-events: auto;\n  display: flex;\n  align-items: center;\n  white-space: nowrap;\n  font-size: 0.8rem;\n  font-weight: 500;\n  text-transform: lowercase;\n\n  color: var(--primary-color);\n  margin: 0 1rem 0.5rem 0;\n`;\nconst StyledTagLink = styled(Link)`\n  text-decoration: none;\n`;\n\nconst TagList = ({ tags }) => {\n  return (\n    <StyledTagContainer>\n      {tags.map((tag) => (\n        <StyledTag key={tag}>\n          <StyledTagLink to={`/tags/${tag}/`}>#{tag}</StyledTagLink>\n        </StyledTag>\n      ))}\n    </StyledTagContainer>\n  );\n};\n\nTagList.propTypes = {\n  tags: PropTypes.array.isRequired,\n};\n\nexport default TagList;\n","import styled from '@emotion/styled';\nimport { graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Icon from '../components/icon';\nimport Layout from '../components/layout';\nimport TagList from '../components/tag-list';\nimport TechList from '../components/tech-list';\nimport { blogMenuLinks } from '../components/_config/menu-links';\nimport { StyledH1 } from '../components/_shared/styled-headings';\nimport { StyledSection } from '../components/_shared/styled-section';\n\nconst StyledBlogSection = styled(StyledSection)`\n  min-height: calc(100vh - var(--header-height));\n\n  & > .gatsby-image-wrapper {\n    width: 50%;\n  }\n`;\nconst StyledBlogTitle = styled(StyledH1)`\n  margin-top: 3rem;\n`;\nconst StyledSubTitle = styled.p`\n  margin-top: -1rem;\n  font-size: 0.9rem;\n`;\nconst StyledDate = styled.div`\n  font-size: 0.8rem;\n\n  & span {\n    font-weight: 500;\n  }\n`;\n\nconst StyledHeader = styled.header`\n  display: flex;\n  width:100%\n`;\nconst StyledBlogText = styled.div`\n  padding: 2rem;\n  width: 100%;\n  background: var(--bg-code);\n  border-radius: var(--radius);\n  border-top-left-radius: 0;\n  border-top-right-radius: 0;\n`;\nconst StyledIFrameContainer = styled.div`\n  position: relative;\n  overflow: hidden;\n  width:100%;\n  padding-top: 56.25%;\n`;\n\nconst StyledIFrame = styled.iframe`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  border: 0;  \n`;\n\nconst StyledLinkContainer = styled.a`\n  padding: 0px 10px;\n  }\n`;\n\n\nconst BlogPost = ({ data }) => {\n  const readingTime = data.markdownRemark.fields.readingTime.text;\n  const post = data.markdownRemark;\n  const coverImage = post.frontmatter.cover_image ? post.frontmatter.cover_image.childImageSharp.fluid : null;\n  const { tags = [],techs = [], title, date, description, v_link} = post.frontmatter;\n  const repoLink = post.frontmatter.repo_link;\n  const demoLink = post.frontmatter.demo_link;\n  const iosLink = post.frontmatter.ios_link;\n  const androidLink = post.frontmatter.android_link;\n  const demoLinkLabel = `featured project ${title} demo`;\n  const repoLinkLabel = `featured project ${title} repo`;\n\n  return (\n    <Layout menuLinks={blogMenuLinks}>\n      <StyledBlogSection>\n        {v_link &&\n        <StyledIFrameContainer>\n          <StyledIFrame allowFullScreen={true} src={'https://www.youtube.com/embed/' + v_link}/>\n        </StyledIFrameContainer>}\n        <StyledHeader>\n          <StyledBlogTitle>{title} <span style = {{float:'right'}}>\n            {demoLink && (\n              <StyledLinkContainer href={demoLink} target=\"_blank\" rel=\"noopener\" title=\"Demo Link\" aria-label={demoLinkLabel}>\n                <Icon icon=\"itch-io\" prefix=\"fab\" />\n              </StyledLinkContainer>\n            )}\n            {repoLink && (\n              <StyledLinkContainer href={repoLink} target=\"_blank\" rel=\"noopener\" title=\"Repository Link\" aria-label={repoLinkLabel}>\n                <Icon icon=\"github\" prefix=\"fab\" />\n              </StyledLinkContainer>\n            )}\n            {iosLink && (\n              <StyledLinkContainer href={iosLink} target=\"_blank\" rel=\"noopener\" title=\"Repository Link\" aria-label={repoLinkLabel}>\n                <Icon icon=\"apple\" prefix=\"fab\" />\n              </StyledLinkContainer>\n            )}\n            {androidLink && (\n              <StyledLinkContainer href={androidLink} target=\"_blank\" rel=\"noopener\" title=\"Repository Link\" aria-label={repoLinkLabel}>\n                <Icon icon=\"android\" prefix=\"fab\" />\n              </StyledLinkContainer>\n            )}</span></StyledBlogTitle>\n        </StyledHeader>\n        <StyledSubTitle>{description}</StyledSubTitle>\n        <StyledDate>\n          Released {date}. <span>{readingTime}.</span>\n        </StyledDate>\n        <TechList techs={techs} />\n        <StyledBlogText dangerouslySetInnerHTML={{ __html: post.html }} />\n        <TagList tags={tags}/>\n      </StyledBlogSection>\n    </Layout>\n  );\n};\n\nBlogPost.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nexport default BlogPost;\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        tags\n        description\n        techs\n        v_link\n        repo_link\n        demo_link\n        ios_link\n        android_link\n        date(formatString: \"D. MMMM YYYY\")\n        cover_image {\n          childImageSharp {\n            fluid(maxWidth: 800) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n      fields {\n        readingTime {\n          text\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}